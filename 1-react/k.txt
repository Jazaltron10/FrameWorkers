# See here for image contents: https://github.com/microsoft/vscode-dev-containers/tree/v0.183.0/containers/javascript-node/.devcontainer/base.Dockerfile

# [Choice] Node.js version: 16, 14, 12
ARG VARIANT="16-buster"
FROM mcr.microsoft.com/vscode/devcontainers/javascript-node:0-${VARIANT}
COPY . .


#BUILD
FROM node:14-alpine AS builder

WORKDIR /app

COPY ./server/package*.json ./server/
COPY ./client/package*.json ./client/

RUN cd server && npm install
RUN cd client && npm install

COPY . .

RUN cd server && npm run build
RUN cd client && npm run build

#SERVE
FROM node:14-alpine

WORKDIR /app

COPY --from=builder /app ./

EXPOSE 3000

WORKDIR /app/server

CMD ["npm", "run", "start:prod"]







// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.183.0/containers/javascript-node
{
	"name": "2-Counter",
	"build": {
		"dockerfile": "Dockerfile",
		// Update 'VARIANT' to pick a Node version: 12, 14, 16
		"args": { "VARIANT": "16" }
	},

	// Set *default* container specific settings.json values on container create.
	"settings": {},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"dbaeumer.vscode-eslint",
		"eliverlara.andromeda"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [3002],

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "npm install", 
	//"postCreateCommand": "node node_modules/esbuild/install.js", 

	"containerEnv": {"CHOKIDAR_USEPOLLING": "true"},

	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	//"remoteUser": "node"
}




